<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Create account form template
 *
 * @see app/design/frontend/base/default/template/customer/form/register.phtml
 */
/** @var $this Mage_Customer_Block_Form_Register */
?>

<form action="<?php echo $this->getPostActionUrl() ?>" method="post" id="form-validate" class="customer-form left" enctype="multipart/form-data">
	<div class="customer-form-title"><?php echo $this->__('Create an account') ?></div>
    <?php echo $this->getMessagesBlock()->toHtml() ?>
	<input type="hidden" name="success_url" value="<?php echo $this->getSuccessUrl() ?>" />
	<input type="hidden" name="error_url" value="<?php echo $this->getErrorUrl() ?>" />
	<?php echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getFormData())->setForceUseCustomerAttributes(true)->toHtml() ?>
	<input type="email" autocapitalize="off" autocorrect="off" spellcheck="false" name="email" id="email_address" value="<?php echo $this->escapeHtml($this->getFormData()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="std-input validate-email required-entry" placeholder="<?php echo $this->__('E-mail') ?>" />
	<?php $_dob = $this->getLayout()->createBlock('customer/widget_dob') ?>
	<?php if ($_dob->isEnabled()): ?>
		<?php echo $_dob->setDate($this->getFormData()->getDob())->toHtml() ?>
	<?php endif ?>
	<?php $_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat') ?>
	<?php if ($_taxvat->isEnabled()): ?>
		?php echo $_taxvat->setTaxvat($this->getFormData()->getTaxvat())->toHtml() ?>
	<?php endif ?>
	<?php $_gender = $this->getLayout()->createBlock('customer/widget_gender') ?>
	<?php if ($_gender->isEnabled()): ?>
		<?php echo $_gender->setGender($this->getFormData()->getGender())->toHtml() ?>
	<?php endif ?>
	<?php if($this->getShowAddressFields()): ?>
		<input type="hidden" name="create_address" value="1" />
		<input type="text" name="company" id="company" value="<?php echo $this->escapeHtml($this->getFormData()->getCompany()) ?>" title="<?php echo $this->__('Company') ?>" class="std-input <?php echo $this->helper('customer/address')->getAttributeValidationClass('company') ?>" placeholder="<?php echo $this->__('Company') ?>" />
		<input type="tel" name="telephone" id="telephone" value="<?php echo $this->escapeHtml($this->getFormData()->getTelephone()) ?>" title="<?php echo $this->__('Telephone') ?>" class="std-input <?php echo $this->helper('customer/address')->getAttributeValidationClass('telephone') ?>" placeholder="<?php echo $this->__('Telephone') ?>" />
        <?php $_streetValidationClass = $this->helper('customer/address')->getAttributeValidationClass('street'); ?>
        <input type="text" name="street[]" value="<?php echo $this->escapeHtml($this->getFormData()->getStreet(0)) ?>" title="<?php echo $this->__('Street Address') ?>" id="street_1" class="std-input <?php echo $_streetValidationClass ?>" placeholder="<?php echo $this->__('Street Address') ?>" />
        <?php $_streetValidationClass = trim(str_replace('required-entry', '', $_streetValidationClass)); ?>
        <?php for ($_i = 2, $_n = $this->helper('customer/address')->getStreetLines(); $_i <= $_n; $_i++): ?>
            <input type="text" name="street[]" value="<?php echo $this->escapeHtml($this->getFormData()->getStreet($_i - 1)) ?>" title="<?php echo $this->__('Street Address %s', $_i) ?>" id="street_<?php echo $_i ?>" class="std-input <?php echo $_streetValidationClass ?>" />
        <?php endfor; ?>
		<input type="text" name="city" value="<?php echo $this->escapeHtml($this->getFormData()->getCity()) ?>" title="<?php echo $this->__('City') ?>" class="std-input <?php echo $this->helper('customer/address')->getAttributeValidationClass('city') ?>" id="city" placeholder="<?php echo $this->__('City') ?>" />
        <select id="region_id" name="region_id" title="<?php echo $this->__('State/Province') ?>" class="validate-select" style="display:none;">
            <option value=""><?php echo $this->__('Please select region, state or province') ?></option>
        </select>
        <script type="text/javascript">
        //<![CDATA[
            $('region_id').setAttribute('defaultValue', "<?php echo $this->getFormData()->getRegionId() ?>");
        //]]>
        </script>
		<input type="text" id="region" name="region" value="<?php echo $this->escapeHtml($this->getRegion()) ?>" title="<?php echo $this->__('State/Province') ?>" class="std-input <?php echo $this->helper('customer/address')->getAttributeValidationClass('region') ?>" style="display:none;" placeholder="<?php echo $this->__('State/Province') ?>" />
		<input type="text" name="postcode" value="<?php echo $this->escapeHtml($this->getFormData()->getPostcode()) ?>" title="<?php echo $this->__('Zip/Postal Code') ?>" id="zip" class="std-input validate-zip-international <?php echo $this->helper('customer/address')->getAttributeValidationClass('postcode') ?>" placeholder="<?php echo $this->__('Zip/Postal Code') ?>" />
        <?php echo $this->getCountryHtmlSelect() ?>
		<input type="hidden" name="default_billing" value="1" />
		<input type="hidden" name="default_shipping" value="1" />
	<?php endif; ?>
	<input type="password" name="password" id="password" title="<?php echo $this->__('Password') ?>" class="std-input required-entry validate-password" placeholder="<?php echo $this->__('Password') ?>" />
	<input type="password" name="confirmation" title="<?php echo $this->__('Confirm Password') ?>" id="confirmation" class="std-input required-entry validate-cpassword" placeholder="<?php echo $this->__('Confirm Password') ?>" />
    <?php if ($this->isNewsletterEnabled()): ?>
		<div class="checkbox-field">
	        <input type="checkbox" name="is_subscribed" title="<?php echo $this->__('Sign Up for Newsletter') ?>" value="1" id="is_subscribed"<?php if($this->getFormData()->getIsSubscribed()): ?> checked="checked"<?php endif; ?>  />
    	    <label for="is_subscribed"><?php echo $this->__('Sign Up for Newsletter') ?></label>
		</div>
	<?php endif ?>
	<button type="submit" title="<?php echo $this->__('Register') ?>" class="std-btn"><span><span><?php echo $this->__('Register') ?></span></span></button>
    <?php if (Mage::helper('checkout')->isContextCheckout()): ?>
        <input name="context" type="hidden" value="checkout" />
    <?php endif; ?>
</form>

    <script type="text/javascript">
    //<![CDATA[
        var dataForm = new VarienForm('form-validate', true);
        <?php if($this->getShowAddressFields()): ?>
        new RegionUpdater('country', 'region', 'region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'zip');
        <?php endif; ?>
    //]]>
    </script>
